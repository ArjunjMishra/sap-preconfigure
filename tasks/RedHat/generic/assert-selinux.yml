---

- name: Get info about file /etc/selinux/config
  stat:
    path: /etc/selinux/config
  register: __sap_preconfigure_register_stat_selinux_conf_assert

- name: Assert that file /etc/selinux/config exists and is a regular file
  assert:
    that: __sap_preconfigure_register_stat_selinux_conf_assert.stat.isreg
    fail_msg: "FAIL: File /etc/selinux/config does not exist or is not a regular file!"
#    success_msg: "PASS: File /etc/selinux/config exists and is a regular file."
  ignore_errors: "{{ sap_preconfigure_assert_ignore_errors|d(false) }}"

- name: Warn about SELinux being set to 'enforcing'
  debug:
    msg: "WARN: The SELinux state has been set to 'enforcing' (variable sap_preconfigure_selinux_state)."
  ignore_errors: yes
  when: "sap_preconfigure_selinux_state == 'enforcing'"

- name: Warn about how SELinux would be set when role is run in normal mode
  debug:
    msg: "INFO: When running in normal mode, the role will set the SELinux state to '{{ sap_preconfigure_selinux_state }}'
          (variable sap_preconfigure_selinux_state)."
  ignore_errors: yes
  when: "sap_preconfigure_selinux_state != 'enforcing'"

- name: "Check if the permanent configuration of the SELinux state is '{{ sap_preconfigure_selinux_state }}'"
  command: awk 'BEGIN{FS="="}/^SELINUX=/{print $NF}' /etc/selinux/config
  register: __sap_preconfigure_register_selinux_conf_assert
  changed_when: no
  ignore_errors: yes
  when: __sap_preconfigure_register_stat_selinux_conf_assert.stat.isreg

- name: "Assert that the permanent configuration of the SELinux state is set to '{{ sap_preconfigure_selinux_state }}'"
  assert:
    that: __sap_preconfigure_register_selinux_conf_assert.stdout == "{{ sap_preconfigure_selinux_state }}"
    fail_msg: "FAIL: The system is not configured for the SELinux state of '{{ sap_preconfigure_selinux_state }}'.
               Current configuration: '{{ __sap_preconfigure_register_selinux_conf_assert.stdout }}'."
    success_msg: "PASS: The system is configured for the SELinux state of '{{ sap_preconfigure_selinux_state }}'"
  ignore_errors: "{{ sap_preconfigure_assert_ignore_errors|d(false) }}"
  when: __sap_preconfigure_register_stat_selinux_conf_assert.stat.isreg

- name: Check for the current SELinux state
  command: getenforce
  register: __sap_preconfigure_register_getenforce_assert
  changed_when: no

- name: Assert that SELinux is set correctly
  assert:
    that: __sap_preconfigure_register_getenforce_assert.stdout | lower == "{{ sap_preconfigure_selinux_state }}"
    fail_msg: "FAIL: SELinux is currently not '{{ sap_preconfigure_selinux_state }}'!
               The current SELinux state is: '{{ __sap_preconfigure_register_getenforce_assert.stdout | lower }}'."
    success_msg: "PASS: SELinux is currently {{ sap_preconfigure_selinux_state }}."
  ignore_errors: "{{ sap_preconfigure_assert_ignore_errors|d(false) }}"
